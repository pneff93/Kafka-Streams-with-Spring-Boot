server.port=5555

# Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.streams.application-id=kafkaStreams-with-SpringBoot
spring.kafka.properties.schema.registry.url=http://localhost:8081
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.auto-offset-reset=latest
topic.producer=person-raw
topic.consumer=person-edited
spring.kafka.consu

# PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/testDB
spring.datasource.username=user
spring.datasource.password=password

#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update

#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer